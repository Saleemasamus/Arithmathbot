# -*- coding: utf-8 -*-
"""
Created on Thu Aug 31 12:07:02 2023

@author: Saleema
"""

import time
from tensorflow.keras.preprocessing.image import load_img
import matplotlib.pyplot as plt

time_limit = 500
start_time = time.time()
end_time = start_time + time_limit
print("\nHi, I am Goldy,im a math teaching bot(6th std term 1) ")
print("\nI can show trythese questions and answers.\nAlso exercise question and answers")

while time.time() < end_time:
   time.sleep(3)
   time.sleep(2)
   words_to_remove = ["is", "DO", "may", "i", "know", "about",  "Tell", "me", "tell", "May", "you", "could" ,"its", "with",
                      "give", "and", "between" ]

   print("\nTerm 1 chapters are below:")
   print("\n1.Numbers\n2.Introduction to Algebra\n3.Ratio and Proportion\n4.Geometry\n5.Statistics\n6.Information Processing\n\n")
   time.sleep(1)
   instr = input("Can you please enter the chapter to know: ")
   words = instr.split()
   filtered_words = [word for word in words if word.lower() not in words_to_remove]
   #print("filtered words=",filtered_words)
   result = " ".join(filtered_words)
   low=result.lower()
   #print("Lower=",low)
   if low in ['numbers','1','number','chapter 1','chapter1','1st chapter','nums'] :
     time.sleep(2)
     print("\nNumbers::\nLearning Objectives:\n● To understand large numbers and the terms used to represent them.\n● To compare large numbers and order them.\n● To employ estimation for large numbers.\n● To solve word problems involving four fundamental operations.\n● To understand and use the properties of Whole Numbers.\n")
     time.sleep(3)
     print("Note:::Try these contains question and answers before the corresponding exercise.\n Example: trythese 1.1 contains question and answers before 1.1 exercise")
     while True:
      print("\n Try these 1.1\n Try these 1.2\n Try these 1.4\n Try these 1.5")
      print("\n Exercise 1.1\n Exercise 1.2\n Exercise 1.3\n Exercise 1.4\n Exercise 1.5\n Exercise 1.6\n")
      time.sleep(2)
      insr = input("Can you please select the topic that are listed above: ")
      low1=insr.lower()
        #print(low1)
      print("Processing.....")
      time.sleep(2)
      if low1 in ['trythis1.1','trythese1.1','try1.1','try these 1.1','trythese1.1'] :
          with open("trythese1.1.txt", "r") as file:
            file_contents = file.read()
            print(file_contents)
      elif low1 in ['trythis1.2','trythese1.2','try1.2','try these 1.2','trythese1.2'] :
          with open("trythese1.2.txt", "r") as file:
            file_contents = file.read()
            print(file_contents)
      elif low1 in ['trythis1.4','trythese1.4','try1.4','try these 1.4','trythese1.4'] :
          with open("trythese1.4.txt", "r") as file:
            file_contents = file.read()
            print(file_contents)
      elif low1 in ['trythis1.5','trythese1.5','try1.5','try these 1.5','trythese1.5'] :
          with open("trythese1.5.txt", "r") as file:
            file_contents = file.read()
            print(file_contents)
      elif low1 in ['exercise1.1','ex1.1','1.1','1st exercise','ex 1.1','exe1.1','exe 1.1','exercise 1.1']:
          with open("ex1.1.txt", "r") as file:
            file_contents = file.read()
            print(file_contents)
      elif low1 in ['exercise1.2','ex1.2','1.2','2nd exercise','ex 1.2','exe1.2','exe 1.2','exercise 1.2']:
          with open("ex1.2.txt", "r") as file:
            file_contents = file.read()
            print(file_contents)
      elif low1 in ['exercise1.3','ex1.3','1.3','3rd exercise','ex 1.3','exe1.3','exe 1.3','exercise 1.3']:
          with open("ex1.3.txt", "r") as file:
            file_contents = file.read()
            print(file_contents)
      elif low1 in ['exercise1.4','ex1.4','1.4','4th exercise','ex 1.4','exe1.4','exe 1.4','exercise 1.4']:
          with open("ex1.4.txt", "r") as file:
            file_contents = file.read()
            print(file_contents)
      elif low1 in ['exercise1.5','ex1.5','1.5','5th exercise','ex 1.5','exe1.5','exe 1.5','exercise 1.5']:
          with open("ex1.5.txt", "r") as file:
            file_contents = file.read()
            print(file_contents)
      elif low1 in ['exercise1.6','ex1.6','1.6','6th exercise','ex 1.6','exe1.6','exe 1.6','exercise 1.6']:
          with open("ex1.6.txt", "r") as file:
            file_contents = file.read()
            print(file_contents)
      else :
            print("chapter not specified")
      time.sleep(5)
      repeat = input("\nDo you want to continue in this chapter? (y/n): ")
      if repeat.lower() != 'y':
            break
   elif low in ['algebra','2','algeb','chapter 2','2chapter','2ndchapter','alge']:
     time.sleep(2)
     print("\n2.INTRODUCTION TO ALGEBRA \nLearning Objectives:\n* To describe, extend, create numeric and geometric patterns.\n* To make predictions related to the patterns and investigate repeating patterns.\n* To understand the role of 'variables' in patterns.\n* To use variables in simple algebraic expressions and equations to describerelationships.\n")
     time.sleep(3)
     print("Note:: Try these contains question and answers before the corresponding exercise.\n Example: trythese 2.1 contains question and answers before 2.1 exercise")
     while True:
      print("\n Try these 2.1\n Try these 2.2")
      print("\n Exercise 2.1\n Exercise 2.2\n Exercise 2.3\n")
      time.sleep(2)
      insr = input("Can you please select the topic that are listed above: ")
      low1=insr.lower()
        #print(low1)
      print("Processing.....")
      time.sleep(2)
      if low1 in ['trythis2.1','trythese2.1','try2.1','try these 2.1','try 2.1'] :
          # Load the image
          img = load_img('try2.1.jpg')
          # Display the image using matplotlib
          plt.imshow(img)
          plt.axis('off')  # Turn off axis labels and ticks
          plt.show()
          with open("try2.1.txt", "r") as file:
            file_contents = file.read()
            print(file_contents)
      elif low1 in ['trythis2.2','trythese2.2','try2.2','try these 2.2','try 2.2'] :
          with open("try2.2.txt", "r") as file:
            file_contents = file.read()
            print(file_contents)
      elif low1 in ['exercise2.1','ex2.1','2.1','1st exercise','ex 2.1','exe2.1','exe 2.1','exercise 2.1']:
          with open("ex2.1.txt", "r") as file:
            file_contents = file.read()
            print(file_contents)         
            img = load_img('q2.png')           
            plt.imshow(img)
            plt.axis('off')  
            plt.show()
            print("\nSolution:\n (i) False\n (ii) True\n (iii) False")
            img1 = load_img('ex2.13q.jpg')           
            plt.imshow(img1)
            plt.axis('off')  
            plt.show()
            print("\nSolution:")
            img2 = load_img('ex2.13a.jpg')           
            plt.imshow(img2)
            plt.axis('off')  
            plt.show()
            img3 = load_img('ex2.14q.jpg')           
            plt.imshow(img3)
            plt.axis('off')  
            plt.show()

          with open("ex2.1.1.txt", "r") as file:
              file_contents = file.read()
              print(file_contents)
          img4 = load_img('ex2.112q.jpg')           
          plt.imshow(img4)
          plt.axis('off')  
          plt.show()
          print("\nSolution:\n(d) 22")
          
      elif low1 in ['exercise2.2','ex2.2','2.2','2nd exercise','ex 2.2','exe2.2','exe 2.2','exercise 2.2']:
          with open("ex2.2.txt", "r") as file:
            file_contents = file.read()
            print(file_contents)
      elif low1 in ['exercise2.3','ex2.3','2.3','3rd exercise','ex 2.3','exe2.3','exe 2.3','exercise 2.3']:
          print("\n")
          with open("ex2.3.txt", "r") as file:
            file_contents = file.read()
            print(file_contents)
          img = load_img('A233q.png')           
          plt.imshow(img)
          plt.axis('off')  
          plt.show() 
          print("\nSolution:")
          img = load_img('A233qa.png')           
          plt.imshow(img)
          plt.axis('off')  
          plt.show()
          with open("exr2.3.txt","r") as file:
            f  = file.read()
            print(f)
          img = load_img('A234q.png')           
          plt.imshow(img)
          plt.axis('off')  
          plt.show()
          with open("ex2.34a.txt","r") as file:
            f  = file.read()
            print(f)
          img = load_img('A236q.jpg')           
          plt.imshow(img)
          plt.axis('off')  
          plt.show()  
          img = load_img('A236qa.jpg')           
          plt.imshow(img)
          plt.axis('off')  
          plt.show() 
          img = load_img('A237q.png')           
          plt.imshow(img)
          plt.axis('off')  
          plt.show() 
          img = load_img('A237p.png')           
          plt.imshow(img)
          plt.axis('off')  
          plt.show() 
          img = load_img('A237a.png')           
          plt.imshow(img)
          plt.axis('off')  
          plt.show() 
          with open("ex2.3s.txt","r") as file:
            f  = file.read()
            print(f)
      else :
            print("chapter not specified") 
      time.sleep(5)
      repeat = input("\nDo you want to continue in this chapter? (y/n): ")
      if repeat.lower() != 'y':
            break
   elif low in ['ratio and proportion','3','ratioprop','chapter 3','3chapter','3rdchapter','ratio','ratioproportion','r and p','3rd']:
     time.sleep(2)
     print("\n3.RATIO AND PROPORTION \nLearning Objectives:\n* To understand the concept of ratio.\n* To use ratio notation and simplify ratios.\n* To divide a quantity into two parts in a given ratio.\n* To recognise the relationship between ratio and proportion.\n* To use the unitary method and solve simple ratio problems.\n")
     time.sleep(3)
     print("Note:: Try these contains question and answers before the corresponding exercise.\n Example: trythese 3.1 contains question and answers before 3.1 exercise")
     while True:
      print("\n Try these 3.1\n Try these 3.2\n Try this 3.3\n")
      print("\n Exercise 3.1\n Exercise 3.2\n Exercise 3.3\n Exercise 3.4\n Exercise 3.5\n")
      time.sleep(2)
      insr = input("Can you please select the topic that are listed above: ")
      low1=insr.lower()
        #print(low1)
      print("Processing.....")
      time.sleep(2)
      if low1 in ['trythis3.1','trythese3.1','try3.1','try these 3.1','trythese 3.1','try this 3.1','trythis 3.1'] :
          img = load_img('Rtr1q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          with open("tr3.1.txt", "r") as file:
            filec = file.read()
            print(filec)
          with open("tr3.12.txt", "r") as file:
              filec = file.read()
              print(filec)  
              
          img = load_img('Rtr13.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          with open("tr3.13.txt", "r") as file:
              filec = file.read()
              print(filec)  
              
      elif low1 in ['trythis3.2','trythese3.2','try3.2','try these 3.2','try 3.2'] :
          img = load_img('Rtr21q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          img = load_img('Rtr21q2.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          with open("tr3.21a.txt", "r") as file:
            file_contents = file.read()
            print(file_contents)
      elif low1 in ['trythis3.3','trythis 3.3','trythese3.3','try3.3','try these 3.3','try 3.3'] :
           with open("tr3.3.txt", "r") as file:
             file_contents = file.read()
             print(file_contents)         
      elif low1 in ['exercise3.1','exercise 3.1','ex3.1','ex 3.1','3.1','1st exercise','exe3.1','exe 3.1']:
          with open("ex3.1.txt", "r") as file:
            filec = file.read()
            print(filec)         
      elif low1 in ['exercise3.2','exercise 3.2','ex 3.2','ex3.2','3.2','2nd exercise','exe3.2','exe 3.2']:
          with open("ex3.2.txt", "r") as file:
            filec = file.read()
            print(filec)
      elif low1 in ['exercise3.3','ex3.3','3.3','3rd exercise','exe3.3','exercise 3.3','exe 3.3','ex 3.3']:
          with open("ex3.3.txt", "r") as file:
            file_contents = file.read()
            print(file_contents)
      elif low1 in ['exercise3.4','ex3.4','3.4','4th exercise','exe3.4','exercise 3.4','exe 3.4','ex 3.4']:
          with open("ex3.4.txt", "r") as file:
            filec = file.read()
            print(filec)          
      elif low1 in ['exercise3.5','ex3.5','3.5','5th exercise','exe3.5','exercise 3.5','exe 3.5','ex 3.5']:
           with open("ex3.5.txt", "r") as file:
             filec = file.read()
             print(filec)         
         
      else :
            print("chapter not specified") 
      time.sleep(5)
      repeat = input("\nDo you want to continue in this chapter? (y/n): ")
      if repeat.lower() != 'y':
            break
      
   elif low in ['geometry','4','geomentry','chapter 4','chapter4','4thchapter','4th chapter','geo','geomitry','4th']:
     time.sleep(2)
     print("\n4.GEOMETRY \nLearning Objectives:\n* To know about lines, line segments and rays.\n* To know angles and its types.\n* To know the usage of ruler and protractor.\n* To identify parallel and intersecting lines.\n* To identify pairs of complementary and supplementary angles.\n* To know collinear points and point of concurrency.\n")
     time.sleep(3)
     print("Note:: Try these contains question and answers before the corresponding exercise.\n Example: trythese 4.1 contains question and answers before 4.1 exercise\n")
     while True:
      print("\n Try these 4.1\n Try these 4.2")
      print("\n Exercise 4.1\n Exercise 4.2\n Exercise 4.3\n Exercise 4.4\n")
      time.sleep(2)
      insr = input("Can you please select the topic that are listed above: ")
      low1=insr.lower()
        #print(low1)
      print("Processing.....")
      time.sleep(2)
      if low1 in ['trythis4.1','trythese4.1','try4.1','try 4.1','try these 4.1','trythese 4.1','try this 4.1','trythis 4.1'] :
          img = load_img('tr4.1.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          with open("tr4.1.txt", "r") as file:
            filec = file.read()
            print(filec)
          img = load_img('tr4.12.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()  
          with open("tr4.12.txt", "r") as file:
              filec = file.read()
              print(filec)   
          img = load_img('tr4.13.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          with open("tr4.13.txt", "r") as file:
              filec = file.read()
              print(filec)  
              
      elif low1 in ['trythis4.2','trythese4.2','try4.2','try 4,2','try these 4.2'] :
          with open("tr4.2.txt", "r") as file:
              filec = file.read()
              print(filec)          
          img = load_img('tr4.2.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          with open("tr4.2a.txt", "r") as file:
              filec = file.read()
              print(filec)
              
      elif low1 in ['exercise4.1','exercise 4.1','ex4.1','ex 4.1','4.1','1st exercise','exe4.1','exe 4.1']:
          with open("Ex4.1.txt", "r") as file:
            filec = file.read()
            print(filec) 
          img = load_img('ex4.11a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          img = load_img('ex4.12q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          print("2.Solution\n ")
          img = load_img('ex4.12a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          print("3.Solution\n")
          img = load_img('ex4.13a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          print("4. Construct a line segment using ruler and compass.")
          img = load_img('ex4.14q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          with open("ex4.14a.txt", "r") as file:
            filec = file.read()
            print(filec) 
          img = load_img('ex4.14a1.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          with open("ex4.14a1.txt", "r") as file:
            filec = file.read()
            print(filec)
          img = load_img('ex4.14a2.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()   
          with open("ex4.14a2.txt", "r") as file:
            filec = file.read()
            print(filec)
          with open("ex4.15q.txt", "r") as file:
              filec = file.read()
              print(filec)   
          img = load_img('ex4.15q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()

          img = load_img('ex4.15a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          with open("ex4.16q.txt", "r") as file:
            filec = file.read()
            print(filec)
          img = load_img('ex4.16q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
  
          img = load_img('ex4.16a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          print("\n")
          with open("ex4.17q.txt", "r") as file:
            filec = file.read()
            print(filec)  
          img = load_img('ex4.17q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          with open("ex4.17a.txt", "r") as file:
            filec = file.read()
            print(filec)
          print("\nObjective Type Questions :")  
          img = load_img('ex4.18q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          print("\n8.Solution:\n(c) 3")
          print("\n9.Solution:")
          img = load_img('ex4.19a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
      elif low1 in ['exercise4.2','exercise 4.2','ex 4.2','ex4.2','4.2','2nd exercise','exe4.2','exe 4.2']:
          with open("ex4.2.txt", "r") as file:
            filec = file.read()
            print(filec)
          img = load_img('ex4.2a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          print("\n(ii) An Obtuse Angle\n")
          img = load_img('ex4.2a1.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          print("\n(iii) A Right Angle\n")
          img = load_img('ex4.2a2.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()         
          print("\n(iv) A Straight Angle\n")  
          img = load_img('ex4.2a3.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          print("\n2. Name the vertex and sides that form each angle.")
          img = load_img('ex4.22q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          print("\nSolution:\n(i) D, DE and DF\n(ii) D, DE and DC\n(iii) P, PQ and PR\n(iv) S, SV and ST ")
          print("\n3. Pick out the Right angles from the given figures.")
          img = load_img('ex4.23q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          print("\nSolution:\n(i), (iii), (v)\n")
          print("\n4. Pick out the Acute angles from the given figures.")
          img = load_img('ex4.24q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          print("\nSolution:\n(i), (iii), (iv) are the Acute Angles.\n")
          print("\n5. Pick out the Obtuse angles from the given figures.\n")
          img = load_img('ex4.25q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          print("\nSolution:\n(i) and (ii) are the Obtuse Angles.\n")
          print("\n6. Name the angle in each figure given below in all the possible ways.\n")
          img = load_img('ex4.26q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()          
          img = load_img('ex4.26a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          with open("ex4.27qa.txt", "r") as file:
            file_contents = file.read()
            print(file_contents) 
          img = load_img('ex4.28q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          img = load_img('ex4.28a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          img = load_img('ex4.29q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          print("\nSolution:\n(i) Obtuse angle\n(ii) Zero angle\n(iii) Straight angle\n(iv) Acute angle\n(v) Right angle\n")
          print("\n10. Find the supplementary / complementary angles in each case.\n")
          img = load_img('ex4.210q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          img = load_img('ex4.210q1.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          img = load_img('ex4.210a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          img = load_img('ex4.211q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          print("\nSolution:\n(b) ∠ZXY\n")
          img = load_img('ex4.212q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()  
          print("\nSolution:\n(b) 45°\n")
                   
      elif low1 in ['exercise4.3','ex4.3','ex 4.3','4.3','3rd exercise','exe4.3','exe 4.3']:
          print("\nExercise 4.3\n1. Observe the diagram and fill in the blanks.\n")
          img = load_img('ex4.31q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          with open("ex4.31a.txt", "r") as file:
            file_contents = file.read()
            print(file_contents)
          img = load_img('ex4.32a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          print("\n3. Draw any line and mark any 4 points that are not collinear.")
          img = load_img('ex4.33a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          print("\n4. Draw any 3 lines to have a point of concurrency.\nSolution:")
          img = load_img('ex4.34a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          print("\n5. Draw any 3 lines that are not concurrent. Find the number of points of intersection.\nSolution:")
          img = load_img('ex4.35a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()           
          print("\nObjective Type Questions::")
          img = load_img('ex4.36q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          with open("ex4.36q.txt", "r") as file:
            file_contents = file.read()
            print(file_contents) 
          
      elif low1 in ['exercise4.4','ex4.4','ex 4.4','4.4','4th exercise','exe4.4','exe 4.4']:
         print("\nExercise 4.4\n\nMiscellaneous Practice Problems::\n1. Find the type of lines marked in thick lines (Parallel, intersecting or perpendicular).\n")
         img = load_img('ex4.41q.png')
         plt.imshow(img)
         plt.axis('off') 
         plt.show() 
         print("\nSolution:\n(i) Parallel lines\n(ii) Parallel lines\n(iii) Parallel and Perpendicular lines\n(iv) Intersecting lines\n")
         print("\n2. Find the parallel and intersecting line segments in the picture given below.\n")
         img = load_img('ex4.42q.png')
         plt.imshow(img)
         plt.axis('off') 
         plt.show() 
         print("\nSolution:\n(a) Parallel line segments\n")
         img = load_img('ex4.42a.png')
         plt.imshow(img)
         plt.axis('off') 
         plt.show()
         print("\n(b) Intersecting line segments\n* DE and ZV\n* WX and DC \n")
         print("\n3. Name the following angles as shown in the figure.\n")
         img = load_img('ex4.43q.png')
         plt.imshow(img)
         plt.axis('off') 
         plt.show() 
         img = load_img('ex4.43a.png')
         plt.imshow(img)
         plt.axis('off') 
         plt.show() 
         print("\n4. Measure the angles of the given figures using protractor and identify the type of angle as acute, obtuse, right or straight.\n")
         img = load_img('ex4.44q.png')
         plt.imshow(img)
         plt.axis('off') 
         plt.show()        
         print("\nSolution:\n(i) right angle\n(ii) acute angle\n(iii) straight angle\n(iv) obtuse angle")
         print("\n5. Draw the following angles using the protractor.\n")
         img = load_img('ex4.45q.png')
         plt.imshow(img)
         plt.axis('off') 
         plt.show()
         img = load_img('ex4.45a.png')
         plt.imshow(img)
         plt.axis('off') 
         plt.show()
         img = load_img('ex4.45a1.png')
         plt.imshow(img)
         plt.axis('off') 
         plt.show()  
         print("\n6. From the figures given below, classify the following pairs of angles into complementary and non complementary.\n")      
         img = load_img('ex4.46q.png')
         plt.imshow(img)
         plt.axis('off') 
         plt.show()
         print("\nSolution:\nWe know that the two angles are complementary if they add up to 90°.\nTherefore (a) (i) is complementary.\nIn (v) ∠ABC and ∠CBD are complementary\n(b) (ii), (iii), (iv) and (v) are non-complementary")
         print("\n7. From the figures given below, classify the following pairs of angles into supplementary and non supplementary.\n")
         img = load_img('ex4.47q.png')
         plt.imshow(img)
         plt.axis('off') 
         plt.show()  
         print("\nSolution:\n (ii) and (iv) are supplementary angles.\n(i), and (iii) non-supplementary angles.\n")
         print("\n8. From the figure\n(i) name a pair of complementary angles\n(ii) name a pair of supplementary angles\n")
         img = load_img('ex4.48q.png')
         plt.imshow(img)
         plt.axis('off') 
         plt.show()  
         img = load_img('ex4.48a.png')
         plt.imshow(img)
         plt.axis('off') 
         plt.show()  
         img = load_img('ex4.49q.png')
         plt.imshow(img)
         plt.axis('off') 
         plt.show()
         print("\n9.Solution:\n")
         img = load_img('ex4.49a.png')
         plt.imshow(img)
         plt.axis('off') 
         plt.show()
         print("\n10.Solution:\n")
         img = load_img('ex4.410a.png')
         plt.imshow(img)
         plt.axis('off') 
         plt.show()         
         with open("ex4.411q.txt", "r") as file:
            filec = file.read()
            print(filec)          

      else :
            print("chapter not specified") 
      time.sleep(5)
      repeat = input("\nDo you want to continue in this chapter? (y/n): ")
      if repeat.lower() != 'y':
            break
   elif low in ['statistics','5','statistiks','chapter 5','chapter5','5thchapter','5th chapter','statis','statistic','5th']:
      time.sleep(2)
      print("\n5.STATISTICS \nLearning Objectives:\n* To understand the necessity to collect the data.\n* To organise collected data using tally marks.\n* To understand the need for scaling in pictographs.\n* To draw pictographs and interpret them.\n* To draw bar graphs and interpret them.\n")
      time.sleep(3)
      print("Note:: Try these contains question and answers before the corresponding exercise.\n Example: trythese 5.1 contains question and answers before 5.1 exercise\n")
      while True:
      # print("\n Try these 4.1\n Try these 4.2\n Try this 4.3\n")
       print("\n Exercise 5.1\n Exercise 5.2\n Exercise 5.3\n Exercise 5.4\n")
       time.sleep(2)
       insr = input("Can you please select the topic that are listed above: ")
       low1=insr.lower()
         #print(low1)
       print("Processing.....")
       time.sleep(2)
                  
       if low1 in ['exercise5.1','exercise 5.1','ex5.1','ex 5.1','5.1','1st exercise','exe5.1','exe 5.1']:
           with open("ex5.11.txt", "r") as file:
             filec = file.read()
             print(filec) 
           print("iv)")  
           img = load_img('ex5.11a.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()
           with open("ex5.12q.txt", "r") as file:
             filec = file.read()
             print(filec)         
           img = load_img('ex5.12a.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()
           with open("ex5.13q.txt", "r") as file:
             filec = file.read()
             print(filec)          
           img = load_img('ex5.13a.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()
           with open("ex5.14q.txt", "r") as file:
             filec = file.read()
             print(filec)          
           img = load_img('ex5.14a.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()         
           print("\n5. The table shows the number of calls recorded by a Fire Service Station in one year.")
           img = load_img('ex5.15q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()
           with open("ex5.15q.txt", "r") as file:
             filec = file.read()
             print(filec) 
           img = load_img('ex5.15a.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show() 
           with open("ex5.15a.txt", "r") as file:
             filec = file.read()
             print(filec)
             
           img = load_img('ex5.16q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show() 
           print("\n6.Solution")
           img = load_img('ex5.16a.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()           
           print("\n7.Solution\n(c) 9") 
           print("\n8. The plural form of ‘datum’ is\n(a) datum (b) datums (c) data (d) datas")
           print("\nSolution:\n(c) data\n")
                   
       elif low1 in ['exercise5.2','exercise 5.2','ex 5.2','ex5.2','5.2','2nd exercise','exe5.2','exe 5.2']:
           print("\nExercise 5.2:\n1. Fill in the blanks.")
           img = load_img('ex5.21q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show() 
           print("\n(iii) Representation of data by using pictures is known as __________.\n\nSolution:\n(i) 150\nii)")       
           img = load_img('ex5.21a.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show() 
           print("\n(iii) Pictograph")
           print("\n2. Draw a pictograph for the given data.")
           img = load_img('ex5.22q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()         
           print("\nSolution:\nNumber of computers sold\nScale : 1 Unit = 100 computers")  
           img = load_img('ex5.22a.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show() 
           print("\n3. The following table shows the number of tourists who visited the places in the month of May. Draw a pictograph.\n(Choose your own suitable scale)")
           img = load_img('ex5.23q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show() 
           print("\nSolution:\nNumber of Tourists who visited the places in the month of May.")       
           img = load_img('ex5.23a.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show() 
           print("\n4. The following Pictograph shows the number of students playing different games in a school.")
           img = load_img('ex5.24q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show() 
           print("\n")
           with open("ex5.24a.txt", "r") as file:
             file_contents = file.read()
             print(file_contents)
             
       elif low1 in ['exercise5.3','ex5.3','ex 5.3','5.3','3rd exercise','exe5.3','exe 5.3']:
           print("\nExercise 5.3\n\n1. Read the given Bar Graph which shows the percentage of marks obtained by Brinda in different subjects in an assessment test.")
           img = load_img('ex5.31q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()  
           with open("ex5.31a.txt", "r") as file:
             file_contents = file.read()
             print(file_contents)
           print("\n2. Chitra has to buy Laddus in order to distribute to her friends as follows:\nDraw a Bar Graph for this data.")
           img = load_img('ex5.32q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show() 
           print("\nSolution:\nDistribution of Laddus by Chitra to her friends\nScale : 1 unit = 10 Laddus")
           img = load_img('ex5.32a.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show() 
           print("\n3. The fruits liked by the students of a class are as follows:\nDraw a Bar Graph for this data.")
           img = load_img('ex5.33q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show() 
           print("\nSolution:\nDraw a bar graph for data this data\nScale 1 unit = 2 fruits")
           img = load_img('ex5.33a.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show() 
           print("\n4. The pictograph below gives the number of absentees on different days of the week in class six.\n Draw the Bar graph for the same.")
           img = load_img('ex5.34q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()
           print("\n")
           with open("ex5.35q.txt", "r") as file:
             file_contents = file.read()
             print(file_contents) 
           
       elif low1 in ['exercise5.4','ex5.4','ex 5.4','5.4','4th exercise','exe5.4','exe 5.4']:
          print("\nExercise 5.4\n\nMiscellaneous Practice Problems::\n1. The heights (in centimeters) of 40 children are.\nPrepare a tally mark table.")
          img = load_img('ex5.41q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          print("\nSolution:")
          img = load_img('ex5.41a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          print("\n2. There are 1000 students in a school. Data regarding the mode of transport of the students is given below. Draw a pictograph to represent the data.")
          img = load_img('ex5.42q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          print("\nSolution:\nMode of transport of the students\nScale: 1 Unit=100 Students")
          img = load_img('ex5.42a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          print("\n3. The following pictograph shows the total savings of a group of friends in a year. Each picture represents a saving of Rs.100. Answer the following questions.\n")
          img = load_img('ex5.43q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          print("\n")
          with open("ex5.43a.txt", "r") as file:
             filec = file.read()
             print(filec)
          print("\nChallenging Problems::\n4. The table shows the number of moons that orbit each of the planets in our solar system.\nMake a Bar graph for the below data.")   
          img = load_img('ex5.44q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()        
          print("\nSolution:\nNumber of moons that orbit each of the planets in our solar system\nScale: 1 Unit = 2 moons")
          img = load_img('ex5.44a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          print("\n5. The prediction of Weather in the month of September is given below.")
          img = load_img('ex5.45q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          print("\n(i) Make a frequency table of the types of weather by reading the calendar.\n(ii) How many days are either cloudy or partly cloudy?\n(iii) How many days do not have rain? Give two ways to find the answer?\n(iv) Find the ratio of the number of Sunny days to Rainy days.\nSolution:\ni)")        
          img = load_img('ex5.45a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()  
          print("\n(ii) 14 days\n(iii) 24 days (30 – 6 = 24 days)\n(iv) 10 : 6\n")      
          print("\n6. 30 students were interviewed to fi nd out what they want to become in future. Their responses are given in the following table.\nRepresent this data using Pictograph.\n")
          img = load_img('ex5.46q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          print("\nSolution:\nStudents responses in an interview about their future profession\nScale: 1 Unit = 1 student\n")
          img = load_img('ex5.46a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()  
          print("\n7. Yasmin of class VI was given a task to count the number of books which are biographies, in her school library. The information collected by her is represented as follows.\n")
          img = load_img('ex5.47q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show() 
          print("\n")
          with open("ex5.47a.txt", "r") as file:
             filec = file.read()
             print(filec) 
          print("\n8. The bar graph illustrates the results of a survey conducted on vehicles crossing over a Toll Plaza in one hour.\n")    
          img = load_img('ex5.48q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          img = load_img('ex5.48q1.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()
          print("\nSolution:\nVans = 50; Buses = 40; Cars = 65; Others = 15\nTotal Vehicles = 245\n")
          print("\n9. The lengths (in the nearest centimetre) of 30 drumsticks are given as follows.\nDraw the bar graph showing the same information.\n")
          img = load_img('ex5.49q.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()          
          print("\nSolution:\nThe lengths (in nearest cm) of drumsticks\nScale : 1 Unit = 1 drumstick\n")
          img = load_img('ex5.49a.png')
          plt.imshow(img)
          plt.axis('off') 
          plt.show()                   
         
       else :
             print("chapter not specified") 
       time.sleep(5)
       repeat = input("\nDo you want to continue in this chapter? (y/n): ")
       if repeat.lower() != 'y':
             break       
         
   elif low in ['information processing','6','information','chapter6','chapter 6','chapter6','6thchapter','6th chapter','information','processing','6th']:
      time.sleep(2)
      print("\n6.INFORMATION PROCESSING \nLearning Objectives:\n* To learn how to count and list systematically.\n* To explore different methods of arranging information.\n* To solve puzzles like Sudoku.\n")
      time.sleep(3)
      
      while True:
      
       print("\n Exercise 6.1\n Exercise 6.2\n Exercise 6.3\n ")
       time.sleep(2)
       insr = input("Can you please select the topic that are listed above: ")
       low1=insr.lower()
         #print(low1)
       print("Processing.....")
       time.sleep(2)
                  
       if low1 in ['exercise6.1','exercise 6.1','ex6.1','ex 6.1','6.1','1st exercise','exe6.1','exe 6.1']:
           with open("ex6.1.txt", "r") as file:
             file_contents = file.read()
             print(file_contents)      
           
       elif low1 in ['exercise6.2','exercise 6.2','ex 6.2','ex6.2','6.2','2nd exercise','exe6.2','exe 6.2']:
           print("\nExercise 6.2::\n1) In the following magic triangle, arrange the numbers from 1 to 6, so that you get the same sum on all its sides.")
           img = load_img('ex6.21q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()
           print("\nSolution:\nOne of the answers is.")
           img = load_img('ex6.21a.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show() 
           print("\n")
           with open("ex6.22q.txt", "r") as file:
             file_contents = file.read()
             print(file_contents)
           img = load_img('ex6.22q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()  
           print("\nSolution:\n(i) Yes\n(ii) 5\n(iii) 17, 19, 20, 21, 23")
           print("\n3) Arrange the odd numbers from 1 to 17 without repetition to get a sum of 30 on each side of the magic triangle.")
           img = load_img('ex6.23q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()
           print("\nSolution:")
           img = load_img('ex6.23a.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()
           print("\n4) Put the numbers 1, 2, 3, 4, 5, 6, & 7 in the circles so that each straight line of three numbers add up to the same total.")
           img = load_img('ex6.24q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()
           print("\nSolution:")
           img = load_img('ex6.24a.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()
           print("\n5) Place the number 1 to 12 in the 12 circles so that the sum of the numbers in each of the six lines of the star is 26. Use each number from 1 to 12 exactly once. Find more possible ways?")
           img = load_img('ex6.25q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()
           print("\nSolution:")
           img = load_img('ex6.25a.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show() 
       elif low1 in ['exercise6.3','ex6.3','ex 6.3','6.3','3rd exercise','exe6.3','exe 6.3']:
           print("\nExercise 6.3\n\n1) How many Triangles are there in each of the following figures?.")
           img = load_img('ex6.31q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()  
           print("\nSolution:\n(i) 12 triangles\n(ii) 16 triangles\n(iii) 32 triangles\n(iv) 35 triangles")
           print("\n2) Find the number of dots in the tenth figure of the following patterns.")
           img = load_img('ex6.32q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show() 
           img = load_img('ex6.32q1.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show() 
           print("\nSolution:\n(i) 55\n(ii) 100")
           img = load_img('ex6.33q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show() 
           print("\n(i) Draw the next pattern.\n(ii) Prepare a table for the number of dots used for each pattern.\n(iii) Explain the pattern.\n(iv) Find the number of dots in the 25th pattern.")
           img = load_img('ex6.33a.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show() 
           print("\n4) Count the number of squares in each of the following figures?")
           img = load_img('ex6.34q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()
           print("\nSolution:\n (i) 20 squares \n(ii) 10 squares")
           print("\n5) How many Circles are there in the following figure?")
           img = load_img('ex6.35q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()
           print("\nSolution:\n 7 circles")
           print("\n6) Find the minimum number of straight lines used in forming the following figures.")
           img = load_img('ex6.36q.png')
           plt.imshow(img)
           plt.axis('off') 
           plt.show()
           print("\nSolution:\n(i) 10\n(ii) 12")
       else :
             print("chapter not specified") 
       time.sleep(5)
       repeat = input("\nDo you want to continue in this chapter? (y/n): ")
       if repeat.lower() != 'y':
             break   
   else :
       print("Chapter not specified")          